name: DriveOps CD

on:
  push:
    branches: [ main ]

jobs:
  deploy-vercel:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          
      - name: Install dependencies
        run: |
          cd Car-Management-main/frontend
          npm ci
          
      - name: Build frontend
        run: |
          cd Car-Management-main/frontend
          npm run build
          
      - name: Create Vercel configuration
        run: |
          cd Car-Management-main
          cat > vercel.json << 'EOF'
          {
            "version": 2,
            "name": "driveops",
            "buildCommand": "cd frontend && npm install && npm run build",
            "outputDirectory": "frontend/build",
            "routes": [
              {
                "src": "/api/(.*)",
                "dest": "/backend/api/server.js"
              },
              {
                "src": "/static/(.*)",
                "dest": "/frontend/build/static/$1"
              },
              {
                "src": "/(.*)\.(js|css|ico|png|jpg|svg|json)",
                "dest": "/frontend/build/$1.$2"
              },
              {
                "src": "/(.*)",
                "dest": "/frontend/build/index.html"
              }
            ]
          }
          EOF
          
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
        
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./Car-Management-main
          vercel-args: '--prod'
          
  deploy-docker:
    runs-on: ubuntu-latest
    needs: deploy-vercel
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Create nginx.conf for frontend
        run: |
          cd Car-Management-main/frontend
          cat > nginx.conf << 'EOF'
          server {
            listen 80;
            server_name _;
            
            location / {
                root /usr/share/nginx/html;
                index index.html;
                try_files $uri $uri/ /index.html;
            }
            
            location /api/ {
                proxy_pass http://backend:5000/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
          }
          EOF
          
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./Car-Management-main/frontend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/driveops-frontend:latest
          
      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./Car-Management-main/backend/api
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/driveops-backend:latest