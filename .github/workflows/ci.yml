name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Install Frontend Dependencies
        run: |
          cd Car-Management-main/frontend
          npm install
      - name: Run Frontend Linter
        run: |
          cd Car-Management-main/frontend
          npm run lint || echo "No lint script found, skipping"
  
  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Install Frontend Dependencies
        run: |
          cd Car-Management-main/frontend
          npm install
      - name: Create Jest Config
        run: |
          cd Car-Management-main/frontend
          echo 'module.exports = {
            transform: {
              "^.+\\.[t|j]sx?$": "babel-jest"
            },
            transformIgnorePatterns: [
              "/node_modules/(?!axios)"
            ],
            moduleNameMapper: {
              "^axios$": "<rootDir>/node_modules/axios/dist/axios.js"
            },
            testEnvironment: "jsdom"
          };' > jest.config.js
      - name: Run Frontend Tests
        run: |
          cd Car-Management-main/frontend
          npm test -- --coverage --passWithNoTests
      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: Car-Management-main/frontend/coverage
          retention-days: 5
  
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Install Dependencies
        run: |
          cd Car-Management-main/frontend
          npm install
      - name: Build Frontend
        run: |
          cd Car-Management-main/frontend
          npm run build
      - name: Archive Production Build
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: Car-Management-main/frontend/build
          retention-days: 5
          
  docker:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and Push Frontend Docker Image
        uses: docker/build-push-action@v4
        with:
          context: ./Car-Management-main/frontend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/driveops-frontend:latest
      - name: Build and Push Backend Docker Image
        uses: docker/build-push-action@v4
        with:
          context: ./Car-Management-main/backend/api
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/driveops-backend:latest